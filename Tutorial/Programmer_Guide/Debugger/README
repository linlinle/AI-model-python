tfdbg CLI的其他功能:

1. 要将屏幕输出重定向到文件而不是屏幕.end the command with bash-style redirection
        >> tfdbg> pt cross_entropy/Log:0[:, 0:10] > /tmp/xent_value_slices.txt

2. If you enter run or r repeatedly, you will be able to move through the Session.run() calls in a sequential manner.
    You can also use the -t flag to move ahead a number of Session.run() calls at a time,
        >> tfdbg> run -t 10

3.  you can use the following command to let the debugger repeatedly execute Session.run() calls without stopping,
    until the first nan or inf value shows up in the graph.(conditional breakpoints)
        >> tfdbg> run -f has_inf_or_nan

        (Tip:has_inf_or_nan创建wrapped session时已经注册了称为张量过滤器,这个过滤器检测nans和infs.
        如果你要注册了任何其他的过滤器，你可以使用“run -f”使tfdbg运行，直到任何张量触发该过滤器（导致过滤器返回True）)

4.  注册自己的过滤器：
        def my_filter_callable(datum, tensor):
            # A filter that detects zero-valued scalars.
            return len(tensor.shape) == 0 and tensor == 0.0

        sess.add_tensor_filter('my_filter', my_filter_callable)
  然后在tfdbg运行启动提示符运行，直到您的过滤器被触发
        tfdbg> run -f my_filter
  See this API document for more information on the expected signature and return value of the predicate Callable used with add_tensor_filter().